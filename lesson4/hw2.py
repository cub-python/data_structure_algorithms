# 2. Написать два алгоритма нахождения i-го по счёту простого числа.
# Без использования «Решета Эратосфена»;
# Используя алгоритм «Решето Эратосфена»
# Проанализировать скорость и сложность алгоритмов.
# Результаты анализа сохранить в виде комментариев в файле с кодом.

# Без использования «Решета Эратосфена»;

import timeit

t1 = timeit.timeit()
a = [2]
n = 10000
for i in range(3, n + 1): # O(n)
    k = 0
    for j in a:           # O(n)
        if i % j == 0:    # O(n)
            k = 1
    if k == 0:             # O(n)
        a.append(i)

print(len(a))             # O(2n3)
print(a)

print(t1)


# Используя алгоритм «Решето Эратосфена»

t2 = timeit.timeit()
a = []
for i in range(n + 1):       # O(n)
    a.append(i)
a[1] = 0
i = 2
while i <= n:               # O(n)
    if a[i] != 0:
        j = i + i
        while j <= n:       # O(n)
            a[j] = 0
            j = j + i
    i += 1
a = set(a)
a.remove(0)
print(a)
print(t2)
print(t2-t1)               # O(2n2)

# в варианте «Решето Эратосфена» скорость быстрее и чем n больше,разница увеличивается
# 2-й вариант по сложности > чем 1-й вар
